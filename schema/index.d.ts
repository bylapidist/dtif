/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Override = {
  $token: {
    [k: string]: unknown;
  } & Pointer;
  $when: {
    [k: string]: unknown;
  };
  $ref?: {
    [k: string]: unknown;
  } & Pointer;
  $value?: {
    [k: string]: unknown;
  };
  $fallback?: Fallback;
  [k: string]: unknown;
} & Override1;
export type Pointer = string;
export type Fallback = FallbackEntry | [FallbackEntry, ...FallbackEntry[]];
export type FallbackEntry = {
  $ref?: {
    [k: string]: unknown;
  } & Pointer;
  $value?: {
    [k: string]: unknown;
  };
  $fallback?: Fallback;
  [k: string]: unknown;
} & FallbackEntry1;
export type FallbackEntry1 = {
  [k: string]: unknown;
};
export type Override1 = {
  [k: string]: unknown;
};
/**
 * This interface was referenced by `DesignTokenInterchangeFormat`'s JSON-Schema definition
 * via the `patternProperty` "^(?!\$)".
 */
export type Node = Token | Collection;
export type Token = {
  [k: string]: unknown;
} & {
  $type?: string;
  $value?: unknown;
  $description?: string;
  $extensions?: Extensions;
  $ref?: {
    [k: string]: unknown;
  } & Pointer;
  $deprecated?:
    | boolean
    | {
        $replacement: string;
      };
  $lastModified?: string;
  $lastUsed?: string;
  $usageCount?: number;
  $author?: TrimmedString;
  $tags?: Tags;
  $hash?: HashString;
  /**
   * This interface was referenced by `undefined`'s JSON-Schema definition
   * via the `patternProperty` "^\$".
   */
  [k: string]: unknown;
};
export type TrimmedString = string;
export type Tags = TrimmedString[];
export type HashString = string;
export type Collection = {
  [k: string]: unknown;
} & {
  $extensions?: Extensions;
  $description?: string;
  $deprecated?:
    | boolean
    | {
        $replacement: string;
      };
  $lastModified?: string;
  $lastUsed?: string;
  $usageCount?: number;
  $author?: TrimmedString;
  $tags?: Tags;
  $hash?: HashString;
  [k: string]: unknown;
};

export interface DesignTokenInterchangeFormat {
  $schema?: string;
  $version?: string;
  $extensions?: Extensions;
  $overrides?: Override[];
  [k: string]: unknown;
}
export interface Extensions {
  [k: string]: unknown;
}
